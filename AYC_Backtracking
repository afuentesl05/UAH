#PRÁCTICA 5 BACKTRACKING

#EJERCICIO 1

"""
Se tienen N elementos distintos almacenados en una estructura de acceso directo (por
ejemplo, un vector con los números 1, 2, 3, 4 y 5, o la cadena abcdefg) y se quiere obtener
todas las formas distintas de colocar esos elementos, es decir, hay que conseguir todas las
permutaciones de los N elementos. Diseñar un algoritmo que use Backtracking para
resolver el problema.
"""
# Procedimiento para generar todas las permutaciones
def GenerarPermutaciones(entrada, salida, validos, k):
    """ 
    """
    if k > len(entrada):
        print(salida)  # Imprimir la permutación encontrada
    else:
        for i in range(len(entrada)):
            if validos[i]:
                validos[i] = False
                salida[k - 1] = entrada[i]
                GenerarPermutaciones(entrada, salida, validos, k + 1)
                validos[i] = True

#PROBADOR EJERCICIO 1
entrada = [1, 2, 3, 1]  # Entrada de datos
validos = [True] * len(entrada)  # Array de booleanos inicializados como True
salida = [0] * len(entrada)  # Array de enteros inicializados con ceros

#GenerarPermutaciones(entrada, salida, validos, 1)


#EJERCICIO 2
"""
Resolver el problema anterior considerando la posibilidad de que los elementos se repitan
entre sí (por ejemplo, el vector 1, 2, 3, 1 o la cadena acabada).
"""

def intercambiar(entrada, i, j):
    entrada[i], entrada[j] = entrada[j], entrada[i]

def ejercicio2(entrada, salida, k):
    if k >= N:
        print(salida)
    else:
        for i in range(k, N):
            saltar_iteracion = 0
            for j in range(k, i):
                if entrada[i] == entrada[j]:
                    saltar_iteracion = 1
                    break
            if saltar_iteracion == 0:
                salida[k] = entrada[i]
                entrada = list(entrada)  # Convertir entrada en una lista mutable
                intercambiar(entrada, i, k)
                ejercicio2(entrada, salida, k + 1)
                intercambiar(entrada, k, i)

N = 4  # Asigna el valor de N
entrada = [1,2,3,1]  # Asigna los valores de entrada
salida = [0] * N  # Inicializa la lista de salida con N ceros
ejercicio2(entrada, salida, 0)





